/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 { 
            // Default layer
            // ----------------------------------------------------------------------------------------------------------------
            // | TAB   | Q     | W     | E     | R     | T     |              | Y     | U     | I     | O     | P     | BKSP  |
            // | CTRL  | A     | S     | D     | F     | G     |              | H     | J     | K     | L     | ;     | '     |
            // | ALT   | Z     | X     | C     | V     | B     |              | N     | M     | ,     | .     | /     | \     |
            //                         | LWR   | GUI   | SHFT  |              | ENT   | SPC   | RSE   |  
            bindings = <
                &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BKSP
                &kp LCTRL &kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT 
                &kp LALT  &kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp BSLH
                                              &mo 1     &kp LGUI  &kp LSHFT &kp RET   &kp SPC   &mo 2
            >;
        };

        layer_1 { 
            // Lower layer
            // ----------------------------------------------------------------------------------------------------------------
            // | ESC   | !     | @     | #     | (     | )     |              | /     | 7     | 8     | 9     | _     |       |
            // | `     | $     | %     | ^     | [     | ]     |              | *     | 4     | 5     | 6     | :     | "     |
            // | ~     | &     | <     | >     | {     | }     |              | +     | 1     | 2     | 3     | ?     | "|"   |
            //                         |       |       |       |              | =     | -     | 0     |
            bindings = <
                &kp ESC   &kp EXCL  &kp AT    &kp HASH  &kp LPAR  &kp RPAR  &kp FSLH  &kp N7    &kp N8    &kp N9    &kp UNDER &trans
                &kp GRAVE &kp DLLR  &kp PRCNT &kp CARET &kp LBKT  &kp RBKT  &kp STAR  &kp N4    &kp N5    &kp N6    &kp COLON &kp DQT
                &kp TILDE &kp AMPS  &kp LT    &kp GT    &kp LBRC  &kp RBRC  &kp PLUS  &kp N1    &kp N2    &kp N3    &kp QMARK &kp PIPE
                                              &trans    &trans    &trans    &kp EQUAL &kp MINUS &kp N0
            >;
        };

        layer_2 { 
            // Upper layer
            // ----------------------------------------------------------------------------------------------------------------
            // | ESC   | BT1   | BT2   | BT3   | BT4   | BT5   |              | HOME  | PG_DN | PG_UP | END   | INS   | DEL   |
            // |       | Prev  | Next  | Vol-  | Vol+  | Play  |              | LFT   | DWN   | UP    | RGT   |       |       |
            // | F1    | F2    | F3    | F4    | F5    | F6    |              | F7    | F8    | F9    | F10   | F11   | F12   |
            //                         |       |       | CAPS  |              | BTCLR |       |       |
            bindings = <
                &kp ESC   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp HOME   &kp PG_DN   &kp PG_UP &kp END   &kp INS   &kp DEL 
                &trans    &kp C_PREV   &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP &kp C_PP     &kp LEFT   &kp DOWN    &kp UP    &kp RIGHT &trans    &trans 
                &kp F1    &kp F2       &kp F3       &kp F4       &kp F5       &kp F6       &kp F7     &kp F8      &kp F9    &kp F10   &kp F11   &kp F12
                                                    &trans       &trans       &kp CAPS     &bt BT_CLR &trans      &trans                   
            >;
        };
    };
};