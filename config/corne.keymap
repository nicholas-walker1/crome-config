/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
          tp: tap_preferred {
                compatible = "zmk,behavior-hold-tap";
                label = "TAP_PREFERRED";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
          }; 
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 { 
            // Default layer
            // --------------------------------------------------------------
            // | TAB  | Q | W | E | R | T |     | Y | U | I  | O | P | "|"  |
            // | CAPS | A | S | D | F | G |     | H | J | K  | L | ; | :    |
            // | SHFT | Z | X | C | V | B |     | N | M | ,  | . | ? | SHFT |
            //          | GUI | LWR | ENT |     | SPC | RSE | BKSP |
            bindings = <
                &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O     &kp P     &kp PIPE
                &kp CAPS  &kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp COLON
                &kp LSHFT &kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT   &kp QMARK &kp RSHFT
                            &kp LGUI  &mo 1     &kp RET   &kp SPACE &mo 2     &kp BSPC
            >;
        };

        layer_1 { 
            // Lower layer (previously layer_below)
            // -----------------------------------------------------------
            // | ESC | ! | @ | # | ( | ) |     | + | 7 | 8 | 9 | < | > |
            // | `   | $ | % | ^ | [ | ] |     | - | 4 | 5 | 6 | * | ' |
            // | ~   | & | * | _ | { | } |     | \ | 1 | 2 | 3 | / | " |
            //          | GUI |   | ENT  |     | = | . | 0 |
            bindings = <
                &kp ESC   &kp EXCL  &kp AT    &kp HASH  &kp LPAR  &kp RPAR  &kp PLUS  &kp N7    &kp N8    &kp N9    &kp LT    &kp GT
                &kp GRAVE &kp DLLR  &kp PRCNT &kp CARET &kp LBKT  &kp RBKT  &kp MINUS &kp N4    &kp N5    &kp N6    &kp STAR  &kp SQT
                &kp TILDE &kp AMPS  &kp STAR  &kp UNDER &kp LBRC  &kp RBRC  &kp BSLH  &kp N1    &kp N2    &kp N3    &kp FSLH  &kp DQT
                            &kp LGUI  &trans    &kp RET   &kp EQUAL &kp DOT   &kp N0
            >;
        };

        layer_2 { 
            // Upper layer (previously layer_above)
            // --------------------------------------------------------------------------------------
            // | F1    | F2   | F3   | F4   | F5   | F6   |     | F7  | F8  | F9 | F10  | F11 | F12 |
            // |       | Prev | Next | Vol- | Vol+ | Play |     | LFT | DWN | UP | RGT  |     |     |
            // | BTCLR | BT1  | BT2  | BT3  | BT4  | BT5  |     |     |     |    | CTRL | ALT | DEL |
            //                       |      |      |      |     |     |     |     |
            bindings = <
                &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                &trans &kp C_PREV &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans &trans 
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &kp RCTRL &kp RALT &kp DEL
                            &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };
    };
};